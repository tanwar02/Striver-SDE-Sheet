import java.util.*;

public class Solution {
    
  public static int largestRectangle(ArrayList<Integer> heights) {
      
      int[] left_min = new int[heights.size()];
      int[] right_min = new int[heights.size()];
      Stack<Integer> st = new Stack<>();
      for(int i=0; i<heights.size(); i++){
          
          while(!st.empty() && heights.get(st.peek()) >= heights.get(i)) st.pop();
          if(st.empty()) left_min[i] = -1;
          else left_min[i] = st.peek();
          st.push(i);
      }
      st.clear();
      for(int i=heights.size()-1; i>=0; i--){
          
          while(!st.empty() && heights.get(st.peek()) >= heights.get(i)) st.pop();
          if(st.empty()) right_min[i] = heights.size();
          else right_min[i] = st.peek();
          st.push(i);
      }
      int area = 0;
      for(int i=0; i<heights.size(); i++){
          
          int ar = heights.get(i) * (right_min[i] - left_min[i] - 1);
          area = Math.max(area, ar);
      }
      return area;
  }
}
