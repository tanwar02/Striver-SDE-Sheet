import java.util.*;

public class Solution {
    
    static ArrayList<ArrayList<Integer>> res;
    public static ArrayList<ArrayList<Integer>> solveNQueens(int n) {
        
        res = new ArrayList<>();
        chessboard(new int[n][n], 0, n);
        return res;
    }
    private static void chessboard(int[][] arr, int row, int n){
        
        if(row >= n){
            
            ArrayList<Integer> list = new ArrayList<>();
            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++) list.add(arr[i][j]);
            }
            res.add(list);
            return;
        }
        for(int k=0; k<n; k++){
            
            if(!isValid(arr, row, k, n)) continue;
            arr[row][k] = 1;
            chessboard(arr, row+1, n);
            arr[row][k] = 0;
        }
    }
    private static boolean isValid(int[][] arr, int r, int c, int n){
        
        for(int i=0; i<r; i++){
            
            if(c-(r-i) >= 0 && arr[i][c-(r-i)] == 1) return false;
            if(c+(r-i) < n && arr[i][c+(r-i)] == 1) return false;
            if(arr[i][c] == 1) return false;
        }
        return true;
    }
}
