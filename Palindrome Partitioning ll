import java.util.*;

public class Solution {
    
    static int[] dp;
	public static int palindromePartitioning(String str) {
	    
        dp = new int[str.length()];
        Arrays.fill(dp, -1);
        return palindromePart(str, 0, str.length()-1);
	}
    private static int palindromePart(String str, int i, int j){
        
        if(i > j) return -1;
        if(i == j) return 0;
        if(dp[i] != -1) return dp[i];
        int min = Integer.MAX_VALUE;
        for(int k=i; k<=j; k++){
            
            if(isPalindrome(str, i, k)) min = Math.min(min, 1 + palindromePart(str, k+1, j));
        }
        return dp[i] = min;
    }
    private static boolean isPalindrome(String s, int i, int j){
        
        while(i < j){
            
            if(s.charAt(i) != s.charAt(j)) return false;
            i++;
            j--;
        }
        return true;
    }
}
